info: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]
      User profile is available. Using 'C:\Users\kmushore\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
Hosting environment: Development
Content root path: C:\Users\kmushore\Documents\Visual Studio 2017\Projects\MicroApiDemo\Host
Now listening on: http://127.0.0.1:10409
Application started. Press Ctrl+C to shut down.
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/swagger/index.html  
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 1795.1513ms 200 text/html
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/swagger/v1/swagger.json  
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 173.5035ms 200 application/json;charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/swagger/oauth2-redirect.html  
info: Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware[6]
      The file /oauth2-redirect.html was not modified
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 17.6279ms 304 text/html
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 5.5488ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 39.0228ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 1343.6036ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0707ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 1.2026ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 149.2309ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.035ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.9113ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 151.5243ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0838ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.3446ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 193.5444ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0309ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.4201ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 139.3034ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0674ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.4521ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0291ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.2523ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 224.4107ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0266ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.2363ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 265.1362ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0215ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.2074ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 269.6443ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 193.675ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 GET http://localhost:44362/api/Identity  
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Get", controller = "Identity"}. Executing action UserManagement.Controllers.IdentityController.Get (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.IdentityController.Get (UserManagement) - Validation state: Valid
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.IdentityController.Get (UserManagement), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 0.0419ms.
info: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]
      Executing ObjectResult, writing value of type 'UserManagement.Models.User'.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.IdentityController.Get (UserManagement) in 0.2731ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 172.2935ms 200 application/json; charset=utf-8
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 379.8422ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 475.238ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 604.1544ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (3ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 9.1561ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 10.3822ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 168.7223ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.907ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.3679ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 113.2917ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.2061ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.7498ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 154.3582ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.3371ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.7809ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 115.1005ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9728ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3546ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 150.7363ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9458ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.7878ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 109.0841ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0709ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.5861ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 179.3295ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.6599ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.0307ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 118.1564ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.4771ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.8848ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 175.3582ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8437ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2401ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 109.6165ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.4202ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.7663ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 178.0568ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9283ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.4045ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 110.2255ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 7.521ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 7.9097ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 180.5453ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.4865ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.93ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 117.0332ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.7568ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.1288ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 170.9413ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0534ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.433ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 112.7228ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8874ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2933ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 172.9601ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.7062ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.0468ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 109.7821ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.3254ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6609ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 178.5053ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.7321ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1245ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 109.6001ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.2769ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6923ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 174.9356ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.5267ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.0299ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 111.1117ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.1008ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.5183ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 179.5771ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.3006ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6886ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 112.9507ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8499ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2098ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 180.7145ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.751ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1879ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 110.4352ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.0624ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.4037ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 179.9316ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.6791ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.0817ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 121.6263ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9979ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.34ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 176.4205ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.6869ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.0264ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 114.9447ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.4078ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.8462ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 171.1856ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.6942ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3079ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 110.5792ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 5.3223ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.8095ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 162.7606ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0121ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.9067ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 116.2747ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.4465ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.8345ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 150.3417ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9232ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.8994ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 113.6724ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.197ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.6025ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 150.853ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.6168ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.0267ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 110.6755ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9144ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2583ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 111.8972ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0085ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.5486ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 108.7832ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.2784ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.1765ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 178.3292ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0628ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.8691ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 111.0624ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8149ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.154ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 172.5254ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 5.4299ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.8289ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 120.6993ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.2112ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.5693ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 148.8655ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.5512ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 2.902ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 103.1366ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9089ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2802ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 122.2699ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.5953ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.0045ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 103.9655ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.2827ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6434ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 167.8383ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.9406ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.3005ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 120.6176ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0453ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.5008ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 181.7072ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.2481ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6321ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 113.8431ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8728ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1693ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 168.5976ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9545ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3331ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 112.4588ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.5285ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.8877ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 179.5111ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8316ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3053ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 106.5029ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.014ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.4275ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 176.3118ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.4274ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.7793ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 114.5017ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.5891ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.9333ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 174.4174ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.0912ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.5409ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 113.6895ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.7828ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1635ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 167.967ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9407ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3119ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 106.5197ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.7233ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.0453ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 159.1237ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.2605ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6051ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 107.745ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.7809ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1081ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 147.2576ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.2725ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6095ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 108.8817ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.062ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.4606ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 174.8645ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.3203ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6551ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 111.178ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9046ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2412ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 156.1411ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9895ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6518ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 105.9672ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.956ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3535ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 168.8882ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.6212ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1631ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 108.1071ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8338ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1598ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 177.1958ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.3191ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.8373ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 113.3147ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9677ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.4209ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 162.6045ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.433ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.7801ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 103.5936ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.6044ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.9844ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 162.7147ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.7215ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3761ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 107.8592ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.4624ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.927ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 151.0776ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.6012ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 2.9337ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 107.6239ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0366ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3487ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 146.3069ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8732ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2572ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 109.2693ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.7043ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.0916ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 176.8337ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.7547ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1183ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 110.3604ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.7251ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.0923ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 174.5567ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9396ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2685ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 106.1412ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.4217ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.7415ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 157.0225ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 6.1957ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 6.878ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 160.4041ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 6.346ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 6.695ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 187.0365ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.6504ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 2.983ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 112.2772ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0169ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.4501ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 165.0748ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9819ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3692ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 113.951ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.999ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3462ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 173.5753ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.5829ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.0394ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 138.3575ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (2ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.977ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.3366ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 177.539ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8674ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.5063ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 111.8144ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.84ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1941ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 177.2078ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.7875ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6777ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 111.4344ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.3363ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.7787ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 179.1333ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.4716ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.9257ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 105.2014ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.6561ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.0784ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 115.8156ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.805ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1463ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 111.686ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.0085ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.328ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 127.5996ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.1292ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6219ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 121.495ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.5354ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.892ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 173.9127ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.5432ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.1183ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 115.2441ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.1766ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.6062ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 168.161ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.6004ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.0078ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 109.2894ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.1113ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.5074ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 180.5238ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.3932ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.8603ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 121.9541ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9319ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.27ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 171.8909ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.852ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.2429ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 128.2239ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.9946ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.3625ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 174.5632ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.7342ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.1189ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 115.6059ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.6791ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.0544ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 157.0652ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.7024ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.5174ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 120.638ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.1759ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.5675ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 149.7724ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.8028ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.4639ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 117.5598ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.7499ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.1266ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 178.8383ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.1269ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.5292ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 120.0662ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.4683ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 5.0922ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 159.9639ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.0405ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.4639ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 116.2842ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9895ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.3258ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 171.3527ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 3.9818ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.7086ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 115.747ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.9111ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2459ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 168.4513ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=alice@zaza  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (alice@zaza) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (1ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 4.0175ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 4.5226ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 119.8259ms 200 
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]
      Request starting HTTP/1.1 PUT http://localhost:44362/api/LockUsers?username=leo10  0
info: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler[2]
      Successfully validated the token.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Route matched with {action = "Put", controller = "LockUsers"}. Executing action UserManagement.Controllers.LockUsersController.Put (UserManagement)
info: Microsoft.AspNetCore.Authorization.DefaultAuthorizationService[1]
      Authorization was successful.
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]
      Executing action method UserManagement.Controllers.LockUsersController.Put (UserManagement) with arguments (leo10) - Validation state: Valid
info: Microsoft.EntityFrameworkCore.Infrastructure[10403]
      Entity Framework Core 2.1.4-rtm-31024 initialized 'SsoDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@__username_0='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SELECT TOP(1) [u].[UsersId], [u].[IsLockedOut], [u].[Name], [u].[Password], [u].[PasswordRetryCount], [u].[Profile], [u].[Surname], [u].[Username]
      FROM [Users] AS [u]
      WHERE [u].[Username] = @__username_0
info: Microsoft.EntityFrameworkCore.Database.Command[20101]
      Executed DbCommand (0ms) [Parameters=[@p7='?' (Size = 150), @p0='?' (DbType = Boolean), @p1='?' (Size = 150), @p2='?' (Size = 150), @p3='?' (DbType = Int32), @p4='?' (Size = 150), @p5='?' (Size = 150), @p6='?' (Size = 150)], CommandType='Text', CommandTimeout='30']
      SET NOCOUNT ON;
      UPDATE [Users] SET [IsLockedOut] = @p0, [Name] = @p1, [Password] = @p2, [PasswordRetryCount] = @p3, [Profile] = @p4, [Surname] = @p5, [Username] = @p6
      WHERE [UsersId] = @p7;
      SELECT @@ROWCOUNT;
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action method UserManagement.Controllers.LockUsersController.Put (UserManagement), returned result Microsoft.AspNetCore.Mvc.OkResult in 2.8174ms.
info: Microsoft.AspNetCore.Mvc.StatusCodeResult[1]
      Executing HttpStatusCodeResult, setting HTTP status code 200
info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]
      Executed action UserManagement.Controllers.LockUsersController.Put (UserManagement) in 3.2058ms
info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]
      Request finished in 150.5503ms 200 
